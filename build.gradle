plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

tasks.test {
	useJUnitPlatform()
}

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://repo.akka.io/maven/" }
	maven { url = "https://mvnrepository.com/artifact/org.scala-lang/scala3-library" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.bawnorton.com/releases" }
	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0")))


	include (implementation 'com.typesafe.akka:akka-actor-typed_3:2.6.21')
	include (implementation 'com.typesafe:config:1.4.3')
	include (implementation 'org.scala-lang:scala3-library_3:3.3.3')
	include (implementation "org.scala-lang.modules:scala-java8-compat_2.13:1.0.2")

//	testImplementation("org.mockito:mockito-core:4.8.1")
//	testImplementation("org.mockito:mockito-inline:4.8.1")
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

//	modImplementation "maven.modrinth:lithium:mc1.21.1-0.14.7-fabric"

	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
}

sourceSets {
	test {
		java {
			srcDir 'src/test/java' //Or wherever your tests are
		}
		resources {
			srcDir 'src/test/resources'
		}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/zefiroptimizations.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}